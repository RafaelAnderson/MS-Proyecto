openapi: "3.0.0"
info:
  version: 1.0.0
  title: Bank Account Service
servers:
  - url: http://localhost:8081
paths:
  /accounts:
    post:
      tags:
        - account
      summary: Create a new bank account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BankAccount"
      responses:
        '201':
          description: Account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelApiResponse"
    get:
      tags:
        - account
      summary: Get all account
      operationId: getAllAccounts
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelApiResponse"
  /accounts/{accountId}:
    get:
      tags:
        - account
      summary: Get account details
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelApiResponse"
    delete:
      tags:
        - account
      summary: Delete account
      description: Delete account
      operationId: deleteAccount
      parameters:
        - name: accountId
          in: path
          description: Bank account id to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account deleted
        '400':
          description: Invalid account id
        '404':
          description: Account not found
  /transactions:
    post:
      tags:
        - transaction
      summary: Create a new transaction
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        '201':
          description: Account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelApiResponse"
  /transactions/findAll/{accountId}:
    get:
      tags:
        - account
      summary: Get transactions for a bank account
      operationId: getAccountTransactions
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelApiResponse"

components:
  schemas:
    BankAccount:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - savings
            - current
            - fixed_term
        balance:
          type: number
          format: double
          default: 0.00
          minimum: 0.00
        clientId:
          type: string
        commissionFree:
          type: boolean
          default: false
        commissionAmount:
          type: number
          format: double
          default: 0.00
          minimum: 0.00
        movementsFree:
          type: boolean
          default: false
        movementsLimit:
          type: integer
          default: 0

    Transaction:
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        type:
          type: string
          enum:
            - deposit
            - withdrawal
            - purchase
        amount:
          type: number
          format: double
          minimum: 0
          example: 200.00
        date:
          type: string
          format: date
        description:
          type: string
          example: "Bicycle"

    Credit:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - personal
            - business
        clientId:
          type: string
        line:
          type: number
          format: double
        balance:
          type: number
          format: double
        limit:
          type: number
          format: double
        interestRate:
          type: number
          format: double
        startDate:
          type: integer
        endDate:
          type: integer
        status:
          type: string
          enum:
            - active
            - closed
            - overdue
        monthlyPayment:
          type: number
          format: double
        guarantor:
          type: string
    Client:
      type: object
      properties:
        id:
          type: string
          example: "843un884931019rj10932"
        document:
          type: string
          example: "12345678"
        name:
          type: string
          example: Rafael
        lastName:
          type: string
          example: Ponte
        address:
          type: string
          example: Lima - Per√∫
        phone:
          type: string
          example: '987654321'
        birthDate:
          type: string
        type:
          type: string
          enum:
            - personal
            - business
        profile:
          type: string
          enum:
            - vip
            - pyme
        hasCreditCard:
          type: boolean
          default: false
          example: true

    ModelApiResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code of the response
        message:
          type: string
          description: Message for the response
        data:
          type: object
          description: Data for the response